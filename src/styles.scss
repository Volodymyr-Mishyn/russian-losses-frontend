// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "styles/_variables.scss";

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define your theme with color palettes, typography and density

// Define your theme with color palettes, typography and density

// $base-primary-color: #0056b9;
// $base-accent-color: #ffd800;

$mat-theme-primary-palette: map-merge(
  mat.$blue-palette,
  (
    501: $base-primary-color,
    201: $base-primary-color,
    601: $base-primary-color,
    contrast: (
      100: #150c4a,
    ),
  )
);
$mat-theme-primary: mat.define-palette(
  $mat-theme-primary-palette,
  $default: 501,
  $lighter: 400,
  $darker: 700,
  $text: 500
);

$mat-theme-accent-palette: map-merge(
  mat.$teal-palette,
  (
    501: #ffd800,
    contrast: (
      501: white,
      A100: white,
      A200: white,
    ),
  )
);
$mat-theme-accent: mat.define-palette(
  $mat-theme-accent-palette,
  $default: 501,
  $lighter: 501,
  $darker: 501,
  $text: 501
);

$mat-theme-warn-palette: map-merge(mat.$pink-palette, ());
$mat-theme-warn: mat.define-palette(
  $mat-theme-warn-palette,
  $default: A200,
  $lighter: 500,
  $darker: 500,
  $text: A700
);

$mat-dark-theme-primary-palette: map-merge(
  mat.$blue-palette,
  (
    501: #2c71c1,
    201: $base-primary-color,
    601: $base-primary-color,
  )
);
$mat-dark-theme-primary: mat.define-palette(
  $mat-dark-theme-primary-palette,
  $default: 501,
  $lighter: 201,
  $darker: 900,
  $text: 601
);

$mat-dark-theme-accent-palette: map-merge(
  mat.$amber-palette,
  (
    501: $base-accent-color,
    201: $base-accent-color,
    601: $base-accent-color,
    contrast: (
      A400: black,
    ),
  )
);
$mat-dark-theme-accent: mat.define-palette(
  $mat-dark-theme-accent-palette,
  $default: 501,
  $lighter: 201,
  $darker: A400,
  $text: 601
);

$mat-dark-theme-warn-palette: map-merge(
  mat.$pink-palette,
  (
    contrast: (
      100: white,
    ),
  )
);
$mat-dark-theme-warn: mat.define-palette(
  $mat-dark-theme-warn-palette,
  $default: A400,
  $lighter: 100,
  $darker: A700,
  $text: 100
);

$mat-density: 0;
// @include mat.elevation(
//   $zValue: 12,
//   $color: #000,
//   $opacity: 0.5
// );

$mat-core-theme: mat.define-light-theme(
  (
    color: (
      primary: $mat-theme-primary,
      accent: $mat-theme-accent,
      warn: $mat-theme-warn,
    ),
    density: $mat-density,
  )
);

$mat-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $mat-dark-theme-primary,
      accent: $mat-dark-theme-accent,
      warn: $mat-dark-theme-warn,
    ),
  )
);

@include mat.all-component-themes($mat-core-theme);

.dark-theme {
  @include mat.all-component-colors($mat-dark-theme);
}

$my-typography: mat.define-typography-config();
@include mat.typography-hierarchy($my-typography);

/* You can add global styles to this file, and also import other style files */

@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-icon.icon-xs {
  width: 16px;
  height: 16px;
}

.mat-icon.icon-s {
  width: 24px;
  height: 24px;
}

.mat-icon.icon-m {
  width: 32px;
  height: 32px;
}

.mat-icon.icon-l {
  width: 48px;
  height: 48px;
}

.mat-icon.icon-xl {
  width: 64px;
  height: 64px;
}

.mat-icon.rl-app-icon {
  fill: black;
}

.active-sub-route {
  color: $base-primary-color;
}

.active-language {
  color: $base-primary-color !important;
  font-weight: bold;
  text-shadow: 2px 2px 0px #d5d5d5, 2px 2px 0px rgba(0, 0, 0, 0.2);
}

.dark-theme {
  .mat-icon.rl-app-icon {
    fill: white;
  }
  .active-route {
    color: $base-accent-color;
  }
  .active-sub-route {
    color: $base-accent-color;
  }
  .active-language {
    color: $base-accent-color !important;
    text-shadow: none;
  }
}

.scroll-to-top {
  position: fixed;
  bottom: 20px;
  right: 20px;
}

a {
  box-shadow: inset 0 0 0 0 #54b3d6;
  color: #54b3d6;
  margin: 0 -0.25rem;
  padding: 0 0.25rem;
  transition: color 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
}

a:hover {
  box-shadow: inset 1000px 0 0 0 #54b3d6;
  color: white;
}

a.no-global-a {
  box-shadow: none;
  color: inherit;
  margin: 0;
  padding: 0;
  transition: none;
  &:hover {
    box-shadow: none;
    color: inherit;
  }
}

.glassmorphism-container {
  backdrop-filter: blur(4px);
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  text-align: center;
}

.mat-tooltip-trigger {
  touch-action: auto !important;
}

.word-break-anywhere {
  word-break: break-all;
}

@media only screen and (min-width: 961px) {
  .mat-mdc-dialog-container {
    width: 80vw;
    height: 80vh;
    margin: 0;
    max-width: 80vw;
    max-height: 80vh;
  }
}

@media only screen and (max-width: 960px) {
  .custom-dialog-container {
    width: 90vw !important;
    height: 90vh !important;
  }

  .mat-mdc-dialog-content {
    max-height: 70vh !important;
  }

  .mat-mdc-dialog-container {
    width: 90vw !important;
    height: 90vh !important;
    margin: 0;
    max-width: 90vw;
    max-height: 90vh;
  }
}
